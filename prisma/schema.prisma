// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @unique @default(uuid())
  email         String         @unique
  password      String         @db.VarChar(255)
  refreshTokens RefreshToken[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  bids          Bid[]
  auctions      Auction[]
}

model RefreshToken {
  id          String   @id @unique @default(uuid())
  hashedToken String
  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  revoked     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Auction {
  id            Int      @id @default(autoincrement())
  title         String   @db.VarChar(200)
  description   String?
  startingPrice Decimal  @db.Money
  currentPrice  Decimal  @db.Money
  endTime       DateTime
  createdAt     DateTime
  updatedAt     DateTime @updatedAt
  bids          Bid[]
  User          User     @relation(fields: [userId], references: [id])
  userId        String
}

model Bid {
  id        Int      @id @default(autoincrement())
  auction   Auction  @relation(fields: [auctionId], references: [id])
  auctionId Int
  User      User     @relation(fields: [userId], references: [id])
  userId    String
  amount    Decimal  @db.Money
  createdAt DateTime
}
